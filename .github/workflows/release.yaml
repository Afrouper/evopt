name: Build release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version (z.B. 1.2.0)'
        required: false
        type: string

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: evopt
  REGISTRY: ghcr.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-tags: true

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'   # nutzt Version aus go.mod
          cache: true

      - name: Go generate
        run: |
          go generate ./...

      - name: Resolve version
        id: ver
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            echo "VERSION=${GITHUB_REF##*/v}" >> "$GITHUB_ENV"
          else
            echo "VERSION=${{ github.event.inputs.version }}" >> "$GITHUB_ENV"
          fi

          echo "version=${VERSION}" >> "$GITHUB_OUTPUT"
          echo "Resolved version: ${VERSION}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ steps.meta.outputs.version }}
            type=raw,value=latest

      - name: Build and push multi-arch image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

      - name: Output image refs
        run: |
          echo "Pushed image tags:"
          echo "${{ steps.docker_meta.outputs.tags }}"
